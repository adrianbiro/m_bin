#!/bin/bash

# idea https://github.com/rwxrob/dot/tree/main/scripts

# I have a different workflow, but this is nice.
SCRIPTS=$(pwd)
test ! -n "${SCRIPTS}"  && echo "SCRIPTS not set" && exit 1;
test ! -n "${1}"  && echo "usage: newscript <name> <n|w|r for 644>" && exit 1;

path="${SCRIPTS}/${1}"

if [ -e "${path}" ]; then
  read -r -p "${1} already exists. Edit? " yes
  case "${yes}" in
    y|yes|yep|yeah|ok|okay|ano|a|jo|jj) exec vim "${path}"
  esac
  exit 0
fi

case ${1} in

	*.sh)
		printf "#!/bin/bash\n\n" > "${path}"
		chmod +x "${path}"
		;;
	*.py)
		printf "#!/usr/bin/python3\n\n" > "${path}"
		chmod +x "${path}"
		;;

	*.ps1)
		printf "#!/usr/bin/pwsh\n\nSet-StrictMode -Version Latest" > "${path}"
		chmod +x "${path}"
		;;
	*.rb)
		printf "#!/usr/bin/ruby\n\n" > "${path}"
		chmod +x "${path}"
		;;
	*.pl)
		printf "#!/usr/bin/perl\n\n" > "${path}"
		chmod +x "${path}"
		;;
	*.md|MD)
		printf "" > "${path}"
		;;
	*.yaml|yml)
		printf "" > "${path}"
		;;
	*.hint)
		echo "Use markdown!!!"
		exit 0
		;;
	*)	printf "" > "${path}"
		;;
esac

case ${2} in
		n|w|r)
		chmod -x "${path}"
		;;
esac

exec vim +2 "${path}"

'''
### original
#!/usr/bin/env bash

test ! -n "${SCRIPTS}"  && echo "SCRIPTS not set" && exit 1;
test ! -n "${1}"  && echo "usage: newscript <name>" && exit 1;

path="${SCRIPTS}/${1}"

if [ -e "${path}" ]; then
  read -p "${1} already exists. Edit? " yes
  case "${yes}" in
    y|yes|yep|yeppers|yeah|ok|okay) exec vim "${path}"
  esac
  exit 0
fi

printf "#!/usr/bin/env bash\n\n" > "${path}"
chmod +x "${path}"
exec vim +2 "${path}"
'''
